openapi: 3.0.3
info:
  title: Shop App
  version: 1.0.0
  description: This Project for view how real shop apps are working
paths:
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /cart/api/v1/create-cart/{id}/:
    post:
      operationId: cart_api_v1_create_cart_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Cart
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /cart/api/v1/delete-cart/{id}/:
    delete:
      operationId: cart_api_v1_delete_cart_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Cart
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /cart/api/v1/get-carts/:
    get:
      operationId: cart_api_v1_get_carts_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Cart
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBaseCartList'
          description: ''
  /order/api/v1/create-order/:
    post:
      operationId: order_api_v1_create_order_create
      tags:
      - Order
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /order/api/v1/get-orders/:
    get:
      operationId: order_api_v1_get_orders_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Order
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBaseOrderList'
          description: ''
  /product/api/v1/create-product/:
    post:
      operationId: product_api_v1_create_product_create
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateProductSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProductSerializers'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductSerializers'
          description: ''
  /product/api/v1/delete-product/{id}/:
    delete:
      operationId: product_api_v1_delete_product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /product/api/v1/get-product-by-category/{product_category}/:
    get:
      operationId: product_api_v1_get_product_by_category_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: product_category
        schema:
          type: string
        required: true
      tags:
      - Product
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGetProductsSerializersList'
          description: ''
  /product/api/v1/get-product/{id}/:
    get:
      operationId: product_api_v1_get_product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductSerializers'
          description: ''
  /product/api/v1/get-products/:
    get:
      operationId: product_api_v1_get_products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Product
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGetProductsSerializersList'
          description: ''
  /product/api/v1/get-user-products/{user_id}/:
    get:
      operationId: product_api_v1_get_user_products_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Product
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseProductSerializers'
          description: ''
  /product/api/v1/search-product/{search}/:
    get:
      operationId: product_api_v1_search_product_retrieve
      parameters:
      - in: path
        name: search
        schema:
          type: string
        required: true
      tags:
      - Product
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseProductSerializers'
          description: ''
  /product/api/v1/update-product/{id}/:
    put:
      operationId: product_api_v1_update_product_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProductSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProductSerializers'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductSerializers'
          description: ''
    patch:
      operationId: product_api_v1_update_product_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProductSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProductSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProductSerializers'
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductSerializers'
          description: ''
  /user/api/v1/create-profile-picture/:
    post:
      operationId: user_api_v1_create_profile_picture_create
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfilePictureSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateProfilePictureSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProfilePictureSerializers'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProfilePictureSerializers'
          description: ''
  /user/api/v1/create-user/:
    post:
      operationId: user_api_v1_create_user_create
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUser'
          description: ''
  /user/api/v1/get-user/{id}/:
    get:
      operationId: user_api_v1_get_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - User
      security:
      - basicAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
components:
  schemas:
    BaseCart:
      type: object
      properties:
        id:
          type: integer
        product:
          $ref: '#/components/schemas/BaseProductSerializers'
        created_at:
          type: string
          format: date-time
        quantity:
          type: integer
        total_price:
          type: integer
      required:
      - created_at
      - id
      - product
      - quantity
      - total_price
    BaseOrder:
      type: object
      properties:
        id:
          type: integer
        cart:
          type: array
          items:
            $ref: '#/components/schemas/BaseCart'
        created_at:
          type: string
          format: date-time
        is_payed:
          type: boolean
        total_price:
          type: integer
      required:
      - cart
      - created_at
      - id
      - is_payed
      - total_price
    BaseProductSerializers:
      type: object
      properties:
        id:
          type: integer
        product_title:
          type: string
        price:
          type: integer
        product_picture:
          type: string
          format: uri
        description:
          type: string
        product_category:
          $ref: '#/components/schemas/ProductCategoryEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/UserSerializers'
          readOnly: true
      required:
      - description
      - id
      - price
      - product_category
      - product_picture
      - product_title
      - user
    CreateProductSerializers:
      type: object
      properties:
        product_title:
          type: string
          maxLength: 35
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        product_picture:
          type: string
          format: uri
        description:
          type: string
          maxLength: 1000
        product_category:
          $ref: '#/components/schemas/ProductCategoryEnum'
      required:
      - description
      - price
      - product_category
      - product_picture
      - product_title
    CreateProfilePictureSerializers:
      type: object
      properties:
        profile_picture:
          type: string
          format: uri
      required:
      - profile_picture
    CreateUser:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password1
      - password2
      - username
    GetProductSerializers:
      type: object
      properties:
        id:
          type: integer
        product_title:
          type: string
        price:
          type: integer
        product_picture:
          type: string
          format: uri
        description:
          type: string
        product_category:
          $ref: '#/components/schemas/ProductCategoryEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/UserSerializers'
          readOnly: true
      required:
      - description
      - id
      - price
      - product_category
      - product_picture
      - product_title
      - user
    GetProductsSerializers:
      type: object
      properties:
        id:
          type: integer
        product_title:
          type: string
        price:
          type: integer
        product_picture:
          type: string
          format: uri
        description:
          type: string
        product_category:
          $ref: '#/components/schemas/ProductCategoryEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/UserSerializers'
          readOnly: true
      required:
      - description
      - id
      - price
      - product_category
      - product_picture
      - product_title
      - user
    PaginatedBaseCartList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BaseCart'
    PaginatedBaseOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/BaseOrder'
    PaginatedGetProductsSerializersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetProductsSerializers'
    PatchedUpdateProductSerializers:
      type: object
      properties:
        product_title:
          type: string
          maxLength: 35
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        product_picture:
          type: string
          format: uri
        description:
          type: string
          maxLength: 1000
        product_category:
          $ref: '#/components/schemas/ProductCategoryEnum'
    ProductCategoryEnum:
      enum:
      - Техника
      - Машина
      - Дом
      - Парфюм
      - Еда
      - Одежда
      - Игрушка
      - Другое
      type: string
      description: |-
        * `Техника` - Техника
        * `Машина` - Машина
        * `Дом` - Дом
        * `Парфюм` - Парфюм
        * `Еда` - Еда
        * `Одежда` - Одежда
        * `Игрушка` - Игрушка
        * `Другое` - Другое
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UpdateProductSerializers:
      type: object
      properties:
        product_title:
          type: string
          maxLength: 35
        price:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        product_picture:
          type: string
          format: uri
        description:
          type: string
          maxLength: 1000
        product_category:
          $ref: '#/components/schemas/ProductCategoryEnum'
      required:
      - description
      - price
      - product_category
      - product_picture
      - product_title
    UserSerializers:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        profile_picture:
          type: string
          format: uri
      required:
      - id
      - profile_picture
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
